{
    "parser": "@typescript-eslint/parser",
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "prettier",
        "prettier/@typescript-eslint",
        "plugin:react/recommended"
    ],
    "parserOptions": {
        "project": "./tsconfig.json",
        "ecmaVersion": 2018,
        "sourceType": "module",
        "ecmaFeatures": {
            "jsx": true
        }
    },
    "plugins": ["@typescript-eslint", "import", "prefer-arrow", "react-hooks"],
    "settings": {
        "react": {
            "version": "detect"
        }
    },
    "rules": {
        "@typescript-eslint/array-type": [
            "warn",
            {
                "default": "array-simple",
                "readonly": "array-simple"
            }
        ],
        "@typescript-eslint/ban-types": [
            "error",
            {
                "types": {
                    "Object": {
                        "message": "Avoid using the `Object` type. Did you mean `object`?",
                        "fixWith": "object"
                    },
                    "Function": {
                        "message": "Avoid using the `Function` type. Prefer a specific function type, like `() => void`.",
                        "fixWith": "() => void"
                    },
                    "Boolean": {
                        "message": "Avoid using the `Boolean` type. Did you mean `boolean`?",
                        "fixWith": "boolean"
                    },
                    "Number": {
                        "message": "Avoid using the `Number` type. Did you mean `number`?",
                        "fixWith": "number"
                    },
                    "String": {
                        "message": "Avoid using the `String` type. Did you mean `string`?",
                        "fixWith": "string"
                    },
                    "Symbol": {
                        "message": "Avoid using the `Symbol` type. Did you mean `symbol`?}}",
                        "fixWith": "symbol"
                    }
                }
            }
        ],
        "@typescript-eslint/camelcase": [
            "warn",
            {
                "properties": "never",
                "ignoreDestructuring": true
            }
        ],
        "@typescript-eslint/consistent-type-definitions": "warn",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/explicit-member-accessibility": [
            "error",
            {
                "accessibility": "explicit",
                "overrides": {
                    "constructors": "off"
                }
            }
        ],
        "@typescript-eslint/interface-name-prefix": [
            "warn",
            {
                "prefixWithI": "always"
            }
        ],
        "@typescript-eslint/member-ordering": "warn",
        "@typescript-eslint/no-empty-interface": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-misused-promises": [
            "error",
            {
                "checksVoidReturn": false
            }
        ],
        "@typescript-eslint/no-unused-vars": [
            "warn",
            {
                "argsIgnorePattern": "^props$",
                "ignoreRestSiblings": true
            }
        ],
        "@typescript-eslint/no-use-before-define": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/prefer-for-of": ["warn"],
        "@typescript-eslint/prefer-function-type": "warn",
        "@typescript-eslint/require-await": "off",
        "@typescript-eslint/semi": "warn",
        "@typescript-eslint/unified-signatures": "warn",
        "arrow-parens": ["warn", "as-needed"],
        "comma-dangle": ["warn", "always-multiline"],
        "curly": "warn",
        "dot-notation": "warn",
        "eol-last": "warn",
        "eqeqeq": ["error", "allow-null"],
        "guard-for-in": "error",
        "id-blacklist": ["error", "Undefined", "any", "boolean", "number", "string", "err"],
        "import/no-default-export": "warn",
        "import/order": "off",
        "max-classes-per-file": ["warn"],
        "max-len": [
            "warn",
            120,
            {
                "ignoreStrings": true,
                "ignoreRegExpLiterals": true,
                "ignorePattern": "://",
                "ignoreTemplateLiterals": true
            }
        ],
        "new-parens": "error",
        "no-bitwise": "error",
        "no-caller": "error",
        "no-console": "error",
        "no-constant-condition": "off",
        "no-debugger": "off",
        "no-eval": "error",
        "no-multiple-empty-lines": "warn",
        "no-new-wrappers": "error",
        "no-shadow": "error",
        "no-throw-literal": "error",
        "no-trailing-spaces": "warn",
        "no-undef-init": "warn",
        "no-unused-expressions": "warn",
        "object-shorthand": "warn",
        "one-var": ["warn", "never"],
        "quote-props": ["warn", "as-needed"],
        "quotes": "warn",
        "radix": ["warn", "as-needed"],
        "space-before-function-paren": [
            "warn",
            {
                "anonymous": "never",
                "asyncArrow": "always",
                "named": "never"
            }
        ],
        "spaced-comment": [
            "warn",
            "always",
            {
                "exceptions": ["html"]
            }
        ],
        "valid-jsdoc": "warn",
        "react-hooks/exhaustive-deps": "warn",
        "react-hooks/rules-of-hooks": "error",
        "react/display-name": "off",
        "react/react-in-jsx-scope": "off"
    }
}
